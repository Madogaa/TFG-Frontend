{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport http from 'axios';\nimport { bus } from '@/event-bus.js';\nexport default {\n  name: 'SignUpView',\n  components: {},\n  data() {\n    return {\n      users: [],\n      userName: '',\n      email: '',\n      password: '',\n      repassword: '',\n      showMess: false,\n      errMess: ''\n    };\n  },\n  methods: {\n    postUsuario() {\n      http({\n        method: 'GET',\n        url: `http://localhost:8080/perfil/${this.userName}`\n      }).then(response => response.data).then(perfil => {\n        if (!perfil) {\n          http.post('http://localhost:8080/usuario', {\n            nombre: this.userName,\n            email: this.email,\n            passwd: this.password\n          }).then(response => response.data).then(response => {\n            http.post('http://localhost:8080/perfil', {\n              idUsuario: response,\n              nombre: this.userName\n            }).then(e => {\n              sessionStorage.setItem('user', JSON.stringify(e.data));\n              this.$router.push({\n                name: 'alperfil',\n                params: {\n                  id: this.userName\n                }\n              });\n              bus.emit('actualizaNav', false);\n            });\n          }).catch(err => console.log(err));\n        } else {\n          this.showMess = true;\n          this.errMess = 'Ya existe usuario con ese nick';\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["http","bus","name","components","data","users","userName","email","password","repassword","showMess","errMess","methods","postUsuario","method","url","then","response","perfil","post","nombre","passwd","idUsuario","e","sessionStorage","setItem","JSON","stringify","$router","push","params","id","emit","catch","err","console","log"],"sources":["C:\\Users\\mario\\OneDrive\\Escritorio\\TFG-DOTSHARE\\TFG-DAM-mainn\\TFG-DAM-mainn\\src\\views\\SignUp.vue"],"sourcesContent":["<template>\n  <p v-if=\"showMess\" class=\"info\">{{ errMess }}</p>\n    <div class=\"signin\">\n        <div class=\"box\">\n            <h2>Register</h2>\n            <div class=\"form__input\">\n                <p>Usuario: </p>\n                <input v-model=\"userName\" type=\"text\" name=\"user\" id=\"\">\n            </div>\n            <div class=\"form__input\">\n                <p>Email: </p>\n                <input v-model=\"email\" type=\"text\" name=\"email\" id=\"\">\n            </div>\n            <div class=\"form__input\">\n                <p>Contraseña: </p>\n                <input v-model=\"password\" type=\"text\" name=\"password\" id=\"\">\n            </div>\n            <div class=\"form__input\">\n                <p>Contraseña: </p>\n                <input v-model=\"repassword\" type=\"text\" name=\"repeatpassword\" id=\"\">\n            </div>\n            <div>\n                <button v-on:click=\"this.postUsuario\" class=\"submit\" type=\"submit\">Registrar</button>\n            </div>\n        </div>\n    </div>\n  </template>\n\n<script>\nimport http from 'axios'\nimport { bus } from '@/event-bus.js'\n\nexport default {\n  name: 'SignUpView',\n  components: {\n  },\n  data () {\n    return {\n      users: [],\n      userName: '',\n      email: '',\n      password: '',\n      repassword: '',\n      showMess: false,\n      errMess: ''\n    }\n  },\n  methods: {\n    postUsuario () {\n      http(\n        {\n          method: 'GET',\n          url: `http://localhost:8080/perfil/${this.userName}`\n        }\n      )\n        .then((response) => response.data)\n        .then(perfil => {\n          if (!perfil) {\n            http.post('http://localhost:8080/usuario',\n              {\n                nombre: this.userName,\n                email: this.email,\n                passwd: this.password\n              })\n              .then((response) => response.data)\n              .then(response => {\n                http.post('http://localhost:8080/perfil',\n                  {\n                    idUsuario: response,\n                    nombre: this.userName\n                  })\n                  .then(e => {\n                    sessionStorage.setItem('user', JSON.stringify(e.data))\n                    this.$router.push({ name: 'alperfil', params: { id: this.userName } })\n                    bus.emit('actualizaNav', false)\n                  })\n              })\n              .catch((err) => console.log(err))\n          } else {\n            this.showMess = true\n            this.errMess = 'Ya existe usuario con ese nick'\n          }\n        })\n    }\n  }\n}\n</script>\n\n<style>\n\n</style>\n"],"mappings":";AA6BA,OAAOA,IAAG,MAAO,OAAM;AACvB,SAASC,GAAE,QAAS,gBAAe;AAEnC,eAAe;EACbC,IAAI,EAAE,YAAY;EAClBC,UAAU,EAAE,CACZ,CAAC;EACDC,IAAGA,CAAA,EAAK;IACN,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,UAAU,EAAE,EAAE;MACdC,QAAQ,EAAE,KAAK;MACfC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,WAAUA,CAAA,EAAK;MACbb,IAAI,CACF;QACEc,MAAM,EAAE,KAAK;QACbC,GAAG,EAAG,gCAA+B,IAAI,CAACT,QAAS;MACrD,EACF,CACGU,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACb,IAAI,EAChCY,IAAI,CAACE,MAAK,IAAK;QACd,IAAI,CAACA,MAAM,EAAE;UACXlB,IAAI,CAACmB,IAAI,CAAC,+BAA+B,EACvC;YACEC,MAAM,EAAE,IAAI,CAACd,QAAQ;YACrBC,KAAK,EAAE,IAAI,CAACA,KAAK;YACjBc,MAAM,EAAE,IAAI,CAACb;UACf,CAAC,EACAQ,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACb,IAAI,EAChCY,IAAI,CAACC,QAAO,IAAK;YAChBjB,IAAI,CAACmB,IAAI,CAAC,8BAA8B,EACtC;cACEG,SAAS,EAAEL,QAAQ;cACnBG,MAAM,EAAE,IAAI,CAACd;YACf,CAAC,EACAU,IAAI,CAACO,CAAA,IAAK;cACTC,cAAc,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACJ,CAAC,CAACnB,IAAI,CAAC;cACrD,IAAI,CAACwB,OAAO,CAACC,IAAI,CAAC;gBAAE3B,IAAI,EAAE,UAAU;gBAAE4B,MAAM,EAAE;kBAAEC,EAAE,EAAE,IAAI,CAACzB;gBAAS;cAAE,CAAC;cACrEL,GAAG,CAAC+B,IAAI,CAAC,cAAc,EAAE,KAAK;YAChC,CAAC;UACL,CAAC,EACAC,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;QACpC,OAAO;UACL,IAAI,CAACxB,QAAO,GAAI,IAAG;UACnB,IAAI,CAACC,OAAM,GAAI,gCAA+B;QAChD;MACF,CAAC;IACL;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}